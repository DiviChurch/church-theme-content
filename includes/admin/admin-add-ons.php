<?php/** * Add-ons in Admin * * Admin functions relating to add-ons. * * @package    Church_Theme_Content * @subpackage Admin * @copyright  Copyright (c) 2014, churchthemes.com * @link       https://github.com/churchthemes/church-theme-content * @license    http://www.gnu.org/licenses/old-licenses/gpl-2.0.html * @since      1.2 */// No direct accessif ( ! defined( 'ABSPATH' ) ) exit;/************************************************* * ADD-ON DATA *************************************************//** * Get all add-ons * * @since 1.2 * @return array Addons and their data passed in when registered * @global array $ctc_add_ons */function ctc_get_add_ons() {	global $ctc_add_ons;	$add_ons = array();	if ( isset( $ctc_add_ons ) ) {		$add_ons = $ctc_add_ons;	}	return apply_filters( 'ctc_get_add_ons', $add_ons );}/** * Get single add-on * * Get single add-on. Optionally get an add-on's argument when specified. * * @since 1.2 * @param string Add-on's directory name * @param string Optional argument name to get value for * @return mixed Arguments, single argument or false */function ctc_get_add_on( $add_on_dir, $arg = false ) {	$data = false;	// Get add-ons	$add_ons = ctc_get_add_ons();	// Valid add-on?	if ( isset( $add_ons[$add_on_dir] ) ) {		// Get add-on data		$data = $add_ons[$add_on_dir];		// Get specific argument?		if ( ! empty( $arg ) ) {			// Is argument valid? Use value			if ( isset( $data[$arg] ) ) {				$data = $data[$arg];			}			// If invalid, return false (not array)			else {				$data = false;			}		}	}	return apply_filters( 'ctc_get_add_on', $data, $add_on_dir, $arg );}/************************************************* * PLUGINS SCREEN *************************************************//** * Add Add-ons plugin action link * * This will insert an "Add-ons" link into the plugin's action links on the Plugins page * * @since 1.2 * @param array $links Existing action links * @return array Modified action links */function ctc_add_ons_plugin_action_link( $links ) {	// Have links array?	if ( is_array( $links ) ) {		// Append "Add-ons" link		$links[] = '<a href="' . esc_url( 'http://churchthemes.com/plugins/?utm_source=ctc&utm_medium=plugin&utm_campaign=add-ons&utm_content=plugins' ) . '" target="_blank">' . __( 'Add-ons', 'church-theme-content' ) . '</a>';	}	return $links;}add_filter( 'plugin_action_links_' . CTC_FILE_BASE, 'ctc_add_ons_plugin_action_link', 11 ); // after "Settings" link/************************************************* * POST FIELDS *************************************************//** * Append Custom Recurring Events note * * Inform user of add-on by appending note to Recurrence field's description * * @since 1.2 * @param array $field Field settings * @return array Modified field settings */function ctc_append_custom_recurrence_note( $field ) {	// Show note only when add-on is not in use	if ( ! defined( 'CTC_CRE_VERSION' ) ) {		// Description key may not be set		$field['desc'] = isset( $field['desc'] ) ? $field['desc'] : '';		// If has desc, break to new line		if ( ! empty( $field['desc'] ) ) {			$field['desc'] .= '<br>';		}		// Append note		$field['desc'] .= sprintf(			__( 'Install <a href="%1$s" target="_blank">Custom Recurring Events</a> for more options.', 'church-theme-content' ),			'http://churchthemes.com/plugins/custom-recurring-events/?utm_source=ctc&utm_medium=plugin&utm_campaign=custom_recur_events&utm_content=recurrence_field'		);	}	return $field;}add_action( 'ctmb_field-_ctc_event_recurrence', 'ctc_append_custom_recurrence_note' );